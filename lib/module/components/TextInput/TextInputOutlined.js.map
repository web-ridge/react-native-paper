{"version":3,"sources":["TextInputOutlined.tsx"],"names":["React","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","color","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","ADORNMENT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","AdornmentType","AdornmentSide","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","render","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","adornmentConfig","useMemo","colors","fonts","font","regular","hasActiveOutline","focused","flatten","fontSize","fontSizeStyle","fontWeight","height","backgroundColor","background","textAlign","viewStyle","activeColor","errorColor","inputTextColor","placeholderColor","outlineColor","cc","text","alpha","rgb","string","placeholder","primary","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","textInputStyle","input","textAlignVertical","paddingTop","paddingBottom","ref","underlineColorAndroid","memo","OutlinePure","outline","borderRadius","roundness","borderWidth","borderColor","Outline","create","position","paddingHorizontal","top","bottom","flexGrow","margin","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps, LabelProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nfunction TextInputOutlined(props: ChildTextInputProps) {\n  const {\n    disabled = false,\n    editable = false,\n    label,\n    error = false,\n    selectionColor,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    underlineColor,\n    dense,\n    style,\n    theme,\n    render = (props: RenderProps) => <NativeTextInput {...props} />,\n    multiline = false,\n    parentState,\n    innerRef,\n    onFocus,\n    forceFocus,\n    onBlur,\n    onChangeText,\n    onLayoutAnimatedText,\n    onLeftAffixLayoutChange,\n    onRightAffixLayoutChange,\n    left,\n    right,\n    placeholderTextColor,\n    ...rest\n  } = props;\n\n  const adornmentConfig = React.useMemo(\n    () => getAdornmentConfig({ left, right }),\n    [left, right]\n  );\n\n  const { colors, fonts } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    height,\n    backgroundColor = colors.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    activeColor,\n    errorColor,\n    inputTextColor,\n    placeholderColor,\n    outlineColor,\n  } = React.useMemo(() => {\n    if (disabled) {\n      const cc = color(colors.text).alpha(0.54).rgb().string();\n      return {\n        activeColor: cc,\n        inputTextColor: cc,\n        placeholderColor: colors.disabled,\n        outlineColor: colors.disabled,\n        errorColor: colors.error,\n      };\n    }\n    return {\n      inputTextColor: colors.text,\n      placeholderColor: colors.placeholder,\n      outlineColor: colors.placeholder,\n      errorColor: colors.error,\n      activeColor: error ? colors.error : colors.primary,\n    };\n  }, [\n    colors.disabled,\n    colors.error,\n    colors.placeholder,\n    colors.primary,\n    colors.text,\n    disabled,\n    error,\n  ]);\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = React.useMemo(\n    () => calculateInputHeight(labelHeight, height, minInputHeight),\n    [height, labelHeight, minInputHeight]\n  );\n\n  const topPosition = React.useMemo(\n    () =>\n      calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP),\n    [inputHeight, labelHeight]\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = React.useMemo(\n    () => ({\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    }),\n    [\n      dense,\n      fontScale,\n      fontSize,\n      height,\n      label,\n      labelHalfHeight,\n      multiline,\n      topPosition,\n    ]\n  );\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = React.useMemo(\n    () => adjustPaddingOut({ ...paddingSettings, pad }),\n    [pad, paddingSettings]\n  );\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const labelProps: LabelProps = React.useMemo(\n    () => ({\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor,\n      errorColor,\n      labelTranslationXOffset,\n    }),\n    [\n      activeColor,\n      backgroundColor,\n      baseLabelTranslateX,\n      baseLabelTranslateY,\n      error,\n      errorColor,\n      font,\n      fontSize,\n      fontWeight,\n      hasActiveOutline,\n      label,\n      labelScale,\n      labelTranslationXOffset,\n      onLayoutAnimatedText,\n      placeholderColor,\n      placeholderOpacity,\n      topPosition,\n    ]\n  );\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: minHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput = React.useMemo(\n    () =>\n      getAdornmentStyleAdjustmentForNativeInput({\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        mode: 'outlined',\n      }),\n    [adornmentConfig, leftAffixWidth, rightAffixWidth]\n  );\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: props.parentState.labeled,\n    };\n  }\n\n  const textInputStyle = React.useMemo(\n    () => [\n      styles.input,\n      !multiline || (multiline && height) ? { height: inputHeight } : {},\n      paddingOut,\n      {\n        ...font,\n        fontSize,\n        fontWeight,\n        color: inputTextColor,\n        textAlignVertical: multiline ? 'top' : 'center',\n        textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left',\n      },\n      adornmentStyleAdjustmentForNativeInput,\n    ],\n    [\n      adornmentStyleAdjustmentForNativeInput,\n      font,\n      fontSize,\n      fontWeight,\n      height,\n      inputHeight,\n      inputTextColor,\n      multiline,\n      paddingOut,\n      textAlign,\n    ]\n  );\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <View>\n        <Outline\n          theme={theme}\n          hasActiveOutline={hasActiveOutline}\n          activeColor={activeColor}\n          outlineColor={outlineColor}\n          backgroundColor={backgroundColor}\n        />\n        <View\n          style={{\n            paddingTop: LABEL_PADDING_TOP,\n            paddingBottom: 0,\n            minHeight,\n          }}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n          />\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : props.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: textInputStyle,\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n}\n\nexport default React.memo(TextInputOutlined);\n\ntype OutlineType = {\n  activeColor: string;\n  hasActiveOutline: boolean | undefined;\n  outlineColor: string | undefined;\n  backgroundColor: ColorValue | undefined;\n  theme: ReactNativePaper.Theme;\n};\n\nconst OutlinePure = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineType) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst Outline = React.memo(OutlinePure);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}